package com.edupress.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReviewAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReviewAllPropertiesEquals(Review expected, Review actual) {
        assertReviewAutoGeneratedPropertiesEquals(expected, actual);
        assertReviewAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReviewAllUpdatablePropertiesEquals(Review expected, Review actual) {
        assertReviewUpdatableFieldsEquals(expected, actual);
        assertReviewUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReviewAutoGeneratedPropertiesEquals(Review expected, Review actual) {
        assertThat(actual)
            .as("Verify Review auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReviewUpdatableFieldsEquals(Review expected, Review actual) {
        assertThat(actual)
            .as("Verify Review relevant properties")
            .satisfies(a -> assertThat(a.getRating()).as("check rating").isEqualTo(expected.getRating()))
            .satisfies(a -> assertThat(a.getReviewText()).as("check reviewText").isEqualTo(expected.getReviewText()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReviewUpdatableRelationshipsEquals(Review expected, Review actual) {
        assertThat(actual)
            .as("Verify Review relationships")
            .satisfies(a -> assertThat(a.getCourse()).as("check course").isEqualTo(expected.getCourse()))
            .satisfies(a -> assertThat(a.getStudent()).as("check student").isEqualTo(expected.getStudent()));
    }
}
